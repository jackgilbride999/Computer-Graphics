#version 330

in vec3 vertex_position;
in vec3 vertex_normal;

out vec3 vertex_inWorldSpace;
out vec3 tnorm;
out mat3 NormalMatrix;

uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

void main(){

	vertex_inWorldSpace = vec3(model * vec4(vertex_position, 1.0));

	mat4 ModelViewMatrix = view * model;
	mat3 NormalMatrix = mat3(ModelViewMatrix); // take the upper mat3 to leave out the translation part as it has no meaning in the context of normals

	tnorm = normalize( NormalMatrix * vertex_normal); // transform normals to eye space

	gl_Position = proj * view * vec4(vertex_inWorldSpace, 1.0);
}


  